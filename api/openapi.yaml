openapi: 3.0.2
info:
  title: universal-password-based-authentication-server
  description: Universal password based authentication server.
  contact:
    name: Kandakov Danil
  version: 1.0.0
servers:
- url: http://localhost
  description: For testing, I need it, sorry
tags:
  - name: User
    description: Account management
  - name: Token
    description: Access management
  - name: Additional
    description: Some helping handles
paths:
  /user/create:
    post:
      description: Register new user in the system. (invite code if invite code is required)
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
                password:
                  type: string
                invite-code:
                  type: string
              example:
                login: my_login
                password: my_password
                invite-code: my_invite_code
      responses:
        '200':
          description: ok, user created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '202':
          description: ok, verification code sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification_token'
        '400':
          description: Login already in use, or login and password wrong format
  /user/delete:
    post:
      description: Delete user from system
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access:
                  $ref: '#/components/schemas/access_data'
              example:
                access:
                  refresh_token: my_refresh_token
                  password: my_password
      responses:
        '202':
          description: >-
            All is ok, verification code sent or not (depends on server
            settings)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification_token'
        '400':
          description: Wrong access data
  /password/change:
    patch:
      description: Change password of the user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access:
                  $ref: '#/components/schemas/access_data'
                new_password:
                  type: string
                logout_everywhere:
                  description: Delete all tokens if it's true
                  type: boolean
              example:
                access:
                  refresh_token: my_refresh_token
                  password: my_password
                new_password: my_new_password
                logout_everywhere: false
      responses:
        '202':
          description: >-
            All is ok, verification code sent or not (depends on server
            settings)
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/token_data'
                - $ref: '#/components/schemas/verification_token'
        '400':
          description: Wrong access data
  /login/change:
    patch:
      description: Change login of the user
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access:
                  $ref: '#/components/schemas/access_data'
                new_login:
                  type: string
              example:
                access:
                  refresh_token: my_refresh_token
                  password: my_password
                new_login: my_new_login
      responses:
        '202':
          description: >-
            All is ok, verification code sent or not (depends on server
            settings)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification_token'
        '400':
          description: Wrong access data
  /token/get:
    post:
      description: Login into the system. Get authorization token
      tags:
        - Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
                password:
                  type: string
              example:
                login: my_login
                password: my_password
      responses:
        '200':
          description: >-
            All is ok, verification code sent or not (depends on server
            settings)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token_data'
        '400':
          description: Wrong login or password
  /token/delete:
    post:
      description: Logout from the system. Remove authorization token from database
      tags:
        - Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
              example:
                refresh_token: my_refresh_token
      responses:
        '200':
          description: All is ok
        '400':
          description: Wrong token
  /token/check:
    post:
      description: Check authorization token
      tags:
        - Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
              example:
                token: my_token
      responses:
        '200':
          description: All is ok
        '400':
          description: Wrong token
  /token/update:
    patch:
      description: Update authorization token
      tags:
        - Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                refresh_token:
                  type: string
              example:
                refresh_token: my_refresh_token
      responses:
        '200':
          description: All is ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token_data'
        '400':
          description: Wrong token
  /confirm:
    post:
      description: >-
        Confirm some actions for Account managment or Access managment
        (user/create, user/delete, token/get, password/change, login/change). It can return different json's for different situations (see base requests).
      tags:
        - Additional
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verification_data'
      responses:
        '200':
          description: All is ok
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/token_data'
                  - $ref: '#/components/schemas/user'
        '400':
          description: Wrong verification code or user id
    patch:
      description: >-
        Used for resending verification code.
      tags:
        - Additional
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/verification_token'
      responses:
        '202':
          description: All is ok, new code sended and new token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification_token'
        '400':
          description: Wrong verification code or user id
  /twofa:
    patch:
      description: >-
        Activate Two Factor Auth
      tags:
        - Additional
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                access:
                  $ref: '#/components/schemas/access_data'
      responses:
        '200':
          description: All is ok
        '400':
          description: Wrong verification code or user id
  /password/recovery:
    patch:
      description: send token for auth
      tags:
        - Additional
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                login:
                  type: string
                new_password:
                  type: string
                logout_everywhere:
                  type: boolean
              example:
                login: my_login
      responses:
        '202':
          description: All is ok, code sended and token created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/verification_token'
        '400':
          description: Wrong verification code or user id
components:
  schemas:
    user:
      properties:
        user_id:
          type: integer
    access_data:
      properties:
        refresh_token:
          type: string
        password:
          type: string
      example:
        refresh_token: my_refresh_token
        password: my_password
    verification_data:
      properties:
        verification_token:
          type: string
        verification_code:
          type: string
      example:
        verification_token: my_verification_token
        verification_code: my_verification_code
    token_data:
      properties:
        token:
          type: string
        refresh_token:
          type: string
      example:
        token: my_token
        refresh_token: my_refresh_token
    verification_token:
      properties:
        verification_token:
          type: string
      example:
        verification_token: my_temporary_token